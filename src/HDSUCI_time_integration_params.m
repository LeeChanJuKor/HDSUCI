function params = HDSUCI_time_integration_params(num_substeps, rho_inf)
% HDSUCI_time_integration_params: Computes the time integration coefficients 
%
% This function returns the integration parameters for a given number of substeps 
% and a user-defined time integration parameter (rho_inf). It supports 
% num_substeps = {2, 3, 4, 5}.
%
% Inputs:
%   - num_substeps : Number of substeps used in time integration (2, 3, 4, 5)
%   - rho_inf      : Time integration parameter (stability control)
%
% Output:
%   - params       : A structured variable containing integration coefficients 
%                    (alpha, beta, gamma, delta coefficients)
%

syms g1;
params = struct(); % Initialize output structure

if num_substeps == 2
    % Compute 2-substep method coefficients
    g1 = (-(-rho_inf - 2 + sqrt(rho_inf^2 - 2*rho_inf - 2))/(6*(rho_inf + 1))); 
    if rho_inf == -1
        g1 = 0.500250501190605
    elseif rho_inf == 1-sqrt(3)
        g1 = real(g1);
    end
    a22 = (3*g1 - 1)/(3*(2*g1 - 1));
    a11 = g1;
    a21 = 1 - a22;
    b1 = -1/(2*(g1 - 1));
    b2 = (2*g1 - 1)/(2*(g1 - 1));
    d1 = (g1 - 1)*(3*g1 - 1)/(3*(2*g1 - 1)*g1); 
    d2 = (3*g1 - 1)/(3*(2*g1 - 1)*g1);


    % Store gamma coefficients
    params.g1 = g1;
    params.g2 = 1;
    % Store alpha coefficients
    params.a11 = a11;
    params.a21 = a21;
    params.a22 = a22;
    % Store beta coefficients
    params.b1 = b1;
    params.b2 = b2;
    % Store delta coefficients
    params.d1 = d1;
    params.d2 = d2;

elseif num_substeps == 3
    % Compute 3-substep method coefficients
    g1 = -(-48*rho_inf - 96)/(4*(72*rho_inf + 72)) + sqrt((-48*rho_inf - 96)^2/(4*(72*rho_inf + 72)^2) ...
        - (6*rho_inf + 54)/(72*rho_inf + 72) + ((rho_inf^3 + 6*sqrt(2)*sqrt(rho_inf^5 + 7*rho_inf^4 - 26*rho_inf^3 ...
        + 18*rho_inf^2 + 9*rho_inf - 9) + 27*rho_inf^2 - 45*rho_inf + 9)*(rho_inf^3 + 3*rho_inf^2 + 3*rho_inf ...
        + 1)^2)^(1/3)/(36*(rho_inf^3 + 3*rho_inf^2 + 3*rho_inf + 1)) + ((rho_inf^2 - 6*rho_inf + 9)*(rho_inf^3 ...
        + 3*rho_inf^2 + 3*rho_inf + 1))/(36*(rho_inf + 1)^2*((rho_inf^3 + 6*sqrt(2)*sqrt(rho_inf^5 + 7*rho_inf^4 ...
        - 26*rho_inf^3 + 18*rho_inf^2 + 9*rho_inf - 9) + 27*rho_inf^2 - 45*rho_inf + 9)*(rho_inf^3 + 3*rho_inf^2 ...
        + 3*rho_inf + 1)^2)^(1/3)) + (rho_inf + 9)/(36*(rho_inf + 1)))/2 - sqrt((-48*rho_inf - 96)^2/(2*(72*rho_inf ...
        + 72)^2) - (6*rho_inf + 54)/(72*rho_inf + 72) - ((rho_inf^3 + 6*sqrt(2)*sqrt(rho_inf^5 + 7*rho_inf^4 ...
        - 26*rho_inf^3 + 18*rho_inf^2 + 9*rho_inf - 9) + 27*rho_inf^2 - 45*rho_inf + 9)*(rho_inf^3 + 3*rho_inf^2 ...
        + 3*rho_inf + 1)^2)^(1/3)/(36*(rho_inf^3 + 3*rho_inf^2 + 3*rho_inf + 1)) - ((rho_inf^2 - 6*rho_inf + 9)*(rho_inf^3 ...
        + 3*rho_inf^2 + 3*rho_inf + 1))/(36*(rho_inf + 1)^2*((rho_inf^3 + 6*sqrt(2)*sqrt(rho_inf^5 + 7*rho_inf^4 ...
        - 26*rho_inf^3 + 18*rho_inf^2 + 9*rho_inf - 9) + 27*rho_inf^2 - 45*rho_inf + 9)*(rho_inf^3 + 3*rho_inf^2 ...
        + 3*rho_inf + 1)^2)^(1/3)) - (rho_inf + 9)/(36*(rho_inf + 1)) + ((6*rho_inf + 54)*(-48*rho_inf - 96)/(72*rho_inf ...
        + 72)^2 + 24/(72*rho_inf + 72) - (-48*rho_inf - 96)^3/(4*(72*rho_inf + 72)^3))/sqrt((-48*rho_inf ...
        - 96)^2/(4*(72*rho_inf + 72)^2) - (6*rho_inf + 54)/(72*rho_inf + 72) + ((rho_inf^3 + 6*sqrt(2)*sqrt(rho_inf^5 ...
        + 7*rho_inf^4 - 26*rho_inf^3 + 18*rho_inf^2 + 9*rho_inf - 9) + 27*rho_inf^2 - 45*rho_inf + 9)*(rho_inf^3 ...
        + 3*rho_inf^2 + 3*rho_inf + 1)^2)^(1/3)/(36*(rho_inf^3 + 3*rho_inf^2 + 3*rho_inf + 1)) + ((rho_inf^2 - 6*rho_inf ...
        + 9)*(rho_inf^3 + 3*rho_inf^2 + 3*rho_inf + 1))/(36*(rho_inf + 1)^2*((rho_inf^3 + 6*sqrt(2)*sqrt(rho_inf^5 ...
        + 7*rho_inf^4 - 26*rho_inf^3 + 18*rho_inf^2 + 9*rho_inf - 9) + 27*rho_inf^2 - 45*rho_inf + 9)*(rho_inf^3 ...
        + 3*rho_inf^2 + 3*rho_inf + 1)^2)^(1/3)) + (rho_inf + 9)/(36*(rho_inf + 1))))/2;
    g1 = real(g1);
    if rho_inf == -1
        g1 = 0.675832162487495;
    end
    g2 = 3*g1*(4*g1^2 - 4*g1 + 1)/(12*g1^2 - 6*g1 + 1);
    a11 = g1;
    a22 = g1;
    a21 = g2 - g1;
    b3 = (36*g1^4 - 72*g1^3 + 48*g1^2 - 12*g1 + 1)/(3*(g1 - 1)*(12*g1^3 - 24*g1^2 + 9*g1 - 1));
    a33 = (12*g1^2 - 8*g1 + 1)/(4*(6*g1^2 - 6*g1 + 1));
    a32 = (72*b3*g1^4 - 180*b3*g1^3 - 72*g1^4 + 144*b3*g1^2 + 144*g1^3 - 39*b3*g1 - 96*g1^2 + 3*b3 + 24*g1 - 2)/(12*(6*g1^2 - 6*g1 + 1)*b3*(g1 - g2));
    a31 = 1 - a32 - a33;
    b1 = (2*b3*g2 - 2*b3 - 2*g2 + 1)/(2*(g1 - g2));
    b2 = -(2*b3*g1 - 2*b3 - 2*g1 + 1)/(2*(g1 - g2));
    d1 = (72*g1^5 - 228*g1^4 + 234*g1^3 - 93*g1^2 + 16*g1 - 1)/(12*(12*g1^3 - 18*g1^2 + 8*g1 - 1)*g1^2);
    d2 = -(24*g1^4 - 60*g1^3 + 42*g1^2 - 11*g1 + 1)*(6*g1 - 1)/(8*(18*g1^3 - 24*g1^2 + 9*g1 - 1)*g1^2);
    d3 = (864*g1^6 - 1872*g1^5 + 1512*g1^4 - 636*g1^3 + 150*g1^2 - 19*g1 + 1)/(24*g1^2*(36*g1^4 - 66*g1^3 + 42*g1^2 - 11*g1 + 1));

    % Store gamma coefficients
    params.g1 = g1;
    params.g2 = g2;
    params.g3 = 1;
    % Store alpha coefficients
    params.a11 = a11;
    params.a21 = a21;
    params.a22 = a22;
    params.a31 = a31;
    params.a32 = a32;
    params.a33 = a33;    
    % Store beta coefficients
    params.b1 = b1;
    params.b2 = b2;
    params.b3 = b3;
    % Store delta coefficients
    params.d1 = d1;
    params.d2 = d2;
    params.d3 = d3;

elseif num_substeps == 4
    % Compute 4-substep method coefficients
    % Define the equation to solve for gamma 1
    eq = (-1440*g1^6 + 2880*g1^5 - 2520*g1^4 + 1056*g1^3 - 228*g1^2 + 24*g1 - 1) ...
        / (24*g1^3 * (60*g1^3 - 60*g1^2 + 15*g1 - 1)) == rho_inf;
    
    % Solve the equation numerically
    sol = vpasolve(eq, g1);  
    
    % Select real solutions within the valid range 
    valid_sol = sol(imag(sol) == 0 & sol >= 0.2 & sol <= 1.5);
    
    % Assign the first valid solution if available; otherwise, throw an error
    if ~isempty(valid_sol)
        g1 = double(valid_sol(1));  % Store in params structure
    else
        error('No valid solution for g1 found. Please check the value of rho_inf.');
    end

    a11 = g1;
    a22 = g1;
    a33 = g1;
    a32 = -2*(240*g1^4 - 240*g1^3 + 96*g1^2 - 16*g1 + 1)^2*(7200*g1^7 - 16920*g1^6 + 16020*g1^5 - 7908*g1^4 + 2205*g1^3 - 348*g1^2 + 29*g1 - 1)*(1728000*g1^11 - 5875200*g1^10 + 8899200*g1^9 - 7914240*g1^8 + 4573440*g1^7 - 1794528*g1^6 + 486288*g1^5 - 90960*g1^4 + 11538*g1^3 - 950*g1^2 + 46*g1 - 1)*g1/((28800*g1^8 - 72000*g1^7 + 74880*g1^6 - 42720*g1^5 + 14856*g1^4 - 3252*g1^3 + 434*g1^2 - 32*g1 + 1)^3*(60*g1^3 - 48*g1^2 + 12*g1 - 1));
    a42 = -(240*g1^4 - 240*g1^3 + 96*g1^2 - 16*g1 + 1)^2*(g1 - 1)*(2985984000000*g1^24 - 29362176000000*g1^23 + 133423718400000*g1^22 - 373596364800000*g1^21 + 724910653440000*g1^20 - 1038950323200000*g1^19 + 1144498056192000*g1^18 - 995374932480000*g1^17 + 696469498675200*g1^16 - 397409619686400*g1^15 + 186720825934080*g1^14 - 72720175518720*g1^13 + 23573537038080*g1^12 - 6372769072128*g1^11 + 1436333049312*g1^10 - 269232108048*g1^9 + 41762345636*g1^8 - 5318358014*g1^7 + 549528090*g1^6 - 45290571*g1^5 + 2903904*g1^4 - 139456*g1^3 + 4715*g1^2 - 100*g1 + 1)/(10*g1^2*(82944000*g1^15 - 539136000*g1^14 + 1555200000*g1^13 - 2641766400*g1^12 + 2957921280*g1^11 - 2315831040*g1^10 + 1312319232*g1^9 - 549362304*g1^8 + 171706464*g1^7 - 40167888*g1^6 + 6991824*g1^5 - 891276*g1^4 + 80712*g1^3 - 4912*g1^2 + 180*g1 - 3)*(60*g1^3 - 48*g1^2 + 12*g1 - 1)*(1728000*g1^11 - 5875200*g1^10 + 8899200*g1^9 - 7914240*g1^8 + 4573440*g1^7 - 1794528*g1^6 + 486288*g1^5 - 90960*g1^4 + 11538*g1^3 - 950*g1^2 + 46*g1 - 1));
    a43 = (240*g1^5 - 600*g1^4 + 432*g1^3 - 136*g1^2 + 19*g1 - 1)*(g1 - 1)*(28800*g1^8 - 72000*g1^7 + 74880*g1^6 - 42720*g1^5 + 14856*g1^4 - 3252*g1^3 + 434*g1^2 - 32*g1 + 1)^3*(7200*g1^7 - 20400*g1^6 + 22560*g1^5 - 12600*g1^4 + 3850*g1^3 - 652*g1^2 + 57*g1 - 2)/(40*(3456000*g1^12 - 17280000*g1^11 + 37152000*g1^10 - 45561600*g1^9 + 35608320*g1^8 - 18751680*g1^7 + 6849888*g1^6 - 1755744*g1^5 + 314556*g1^4 - 38544*g1^3 + 3076*g1^2 - 144*g1 + 3)*(7200*g1^7 - 16920*g1^6 + 16020*g1^5 - 7908*g1^4 + 2205*g1^3 - 348*g1^2 + 29*g1 - 1)*(1728000*g1^11 - 5875200*g1^10 + 8899200*g1^9 - 7914240*g1^8 + 4573440*g1^7 - 1794528*g1^6 + 486288*g1^5 - 90960*g1^4 + 11538*g1^3 - 950*g1^2 + 46*g1 - 1)*(24*g1^3 - 36*g1^2 + 12*g1 - 1)*g1^2);
    a44 = (60*g1^3 - 60*g1^2 + 15*g1 - 1)/(120*g1^3 - 180*g1^2 + 60*g1 - 5);
    b1 = (-41472000*g1^14 + 235008000*g1^13 - 580608000*g1^12 + 830131200*g1^11 - 768925440*g1^10 + 489265920*g1^9 - 221106816*g1^8 + 72281664*g1^7 - 17221680*g1^6 + 2984064*g1^5 - 371252*g1^4 + 32268*g1^3 - 1860*g1^2 + 64*g1 - 1)/(96*(g1 - 1)*(60*g1^3 - 48*g1^2 + 12*g1 - 1)*g1^2*(7200*g1^7 - 16920*g1^6 + 16020*g1^5 - 7908*g1^4 + 2205*g1^3 - 348*g1^2 + 29*g1 - 1));
    b2 = (240*g1^4 - 240*g1^3 + 96*g1^2 - 16*g1 + 1)^3*(172800*g1^10 - 720000*g1^9 + 1229760*g1^8 - 1147680*g1^7 + 652848*g1^6 - 237840*g1^5 + 56460*g1^4 - 8660*g1^3 + 824*g1^2 - 44*g1 + 1)/(48*(60*g1^3 - 48*g1^2 + 12*g1 - 1)*(240*g1^5 - 600*g1^4 + 432*g1^3 - 136*g1^2 + 19*g1 - 1)*g1^2*(1728000*g1^11 - 5875200*g1^10 + 8899200*g1^9 - 7914240*g1^8 + 4573440*g1^7 - 1794528*g1^6 + 486288*g1^5 - 90960*g1^4 + 11538*g1^3 - 950*g1^2 + 46*g1 - 1));
    b3 = -(1440*g1^6 - 3120*g1^5 + 2592*g1^4 - 1056*g1^3 + 226*g1^2 - 24*g1 + 1)*(28800*g1^8 - 72000*g1^7 + 74880*g1^6 - 42720*g1^5 + 14856*g1^4 - 3252*g1^3 + 434*g1^2 - 32*g1 + 1)^3/(96*(1728000*g1^11 - 5875200*g1^10 + 8899200*g1^9 - 7914240*g1^8 + 4573440*g1^7 - 1794528*g1^6 + 486288*g1^5 - 90960*g1^4 + 11538*g1^3 - 950*g1^2 + 46*g1 - 1)*(7200*g1^7 - 16920*g1^6 + 16020*g1^5 - 7908*g1^4 + 2205*g1^3 - 348*g1^2 + 29*g1 - 1)*g1^2*(28800*g1^9 - 129600*g1^8 + 214560*g1^7 - 181680*g1^6 + 89208*g1^5 - 26928*g1^4 + 5078*g1^3 - 582*g1^2 + 37*g1 - 1));
    b4 = (82944000*g1^15 - 539136000*g1^14 + 1555200000*g1^13 - 2641766400*g1^12 + 2957921280*g1^11 - 2315831040*g1^10 + 1312319232*g1^9 - 549362304*g1^8 + 171706464*g1^7 - 40167888*g1^6 + 6991824*g1^5 - 891276*g1^4 + 80712*g1^3 - 4912*g1^2 + 180*g1 - 3)/(12*(g1 - 1)*(28800*g1^9 - 129600*g1^8 + 214560*g1^7 - 181680*g1^6 + 89208*g1^5 - 26928*g1^4 + 5078*g1^3 - 582*g1^2 + 37*g1 - 1)*(240*g1^5 - 600*g1^4 + 432*g1^3 - 136*g1^2 + 19*g1 - 1));
    g2 = (240*g1^4 - 360*g1^3 + 192*g1^2 - 40*g1 + 3)*g1/(240*g1^4 - 240*g1^3 + 96*g1^2 - 16*g1 + 1);
    g3 = g1*(28800*g1^8 - 100800*g1^7 + 142560*g1^6 - 106800*g1^5 + 46488*g1^4 - 12072*g1^3 + 1826*g1^2 - 148*g1 + 5)/(28800*g1^8 - 72000*g1^7 + 74880*g1^6 - 42720*g1^5 + 14856*g1^4 - 3252*g1^3 + 434*g1^2 - 32*g1 + 1);
    a21 = g2 - a22;
    a31 = g3 - a32 - a33;
    a41 = 1 - a44 - a42 - a43;
    d1 = ((g1 - 1)*(60*g1^3 - 60*g1^2 + 15*g1 - 1)*(240*g1^5 - 600*g1^4 + 432*g1^3 - 136*g1^2 + 19*g1 - 1)*(28800*g1^9 - 129600*g1^8 + 214560*g1^7 - 181680*g1^6 + 89208*g1^5 - 26928*g1^4 + 5078*g1^3 - 582*g1^2 + 37*g1 - 1))/(5*g1^3*(24*g1^3 - 36*g1^2 + 12*g1 - 1)*(240*g1^4 - 360*g1^3 + 192*g1^2 - 40*g1 + 3)*(28800*g1^8 - 100800*g1^7 + 142560*g1^6 - 106800*g1^5 + 46488*g1^4 - 12072*g1^3 + 1826*g1^2 - 148*g1 + 5));
    d2 = ((60*g1^3 - 60*g1^2 + 15*g1 - 1)*(240*g1^5 - 600*g1^4 + 432*g1^3 - 136*g1^2 + 19*g1 - 1)*(28800*g1^9 - 129600*g1^8 + 214560*g1^7 - 181680*g1^6 + 89208*g1^5 - 26928*g1^4 + 5078*g1^3 - 582*g1^2 + 37*g1 - 1))/(40*g1^3*(24*g1^3 - 36*g1^2 + 12*g1 - 1)*(60*g1^3 - 48*g1^2 + 12*g1 - 1)*(7200*g1^7 - 16920*g1^6 + 16020*g1^5 - 7908*g1^4 + 2205*g1^3 - 348*g1^2 + 29*g1 - 1));
    d3 = -((g1 - 1)*(60*g1^3 - 60*g1^2 + 15*g1 - 1)*(240*g1^4 - 240*g1^3 + 96*g1^2 - 16*g1 + 1)^3*(28800*g1^9 - 129600*g1^8 + 214560*g1^7 - 181680*g1^6 + 89208*g1^5 - 26928*g1^4 + 5078*g1^3 - 582*g1^2 + 37*g1 - 1))/(20*g1^3*(24*g1^3 - 36*g1^2 + 12*g1 - 1)*(60*g1^3 - 48*g1^2 + 12*g1 - 1)*(240*g1^4 - 360*g1^3 + 192*g1^2 - 40*g1 + 3)*(1728000*g1^11 - 5875200*g1^10 + 8899200*g1^9 - 7914240*g1^8 + 4573440*g1^7 - 1794528*g1^6 + 486288*g1^5 - 90960*g1^4 + 11538*g1^3 - 950*g1^2 + 46*g1 - 1));
    d4 = ((g1 - 1)*(60*g1^3 - 60*g1^2 + 15*g1 - 1)*(240*g1^5 - 600*g1^4 + 432*g1^3 - 136*g1^2 + 19*g1 - 1)*(28800*g1^8 - 72000*g1^7 + 74880*g1^6 - 42720*g1^5 + 14856*g1^4 - 3252*g1^3 + 434*g1^2 - 32*g1 + 1)^3)/(40*g1^3*(24*g1^3 - 36*g1^2 + 12*g1 - 1)*(7200*g1^7 - 16920*g1^6 + 16020*g1^5 - 7908*g1^4 + 2205*g1^3 - 348*g1^2 + 29*g1 - 1)*(28800*g1^8 - 100800*g1^7 + 142560*g1^6 - 106800*g1^5 + 46488*g1^4 - 12072*g1^3 + 1826*g1^2 - 148*g1 + 5)*(1728000*g1^11 - 5875200*g1^10 + 8899200*g1^9 - 7914240*g1^8 + 4573440*g1^7 - 1794528*g1^6 + 486288*g1^5 - 90960*g1^4 + 11538*g1^3 - 950*g1^2 + 46*g1 - 1));


    % Store gamma coefficients
    params.g1 = g1;
    params.g2 = g2;
    params.g3 = g3;
    params.g4 = 1;
    % Store alpha coefficients
    params.a11 = a11;
    params.a21 = a21;    
    params.a22 = a22;
    params.a31 = a31;
    params.a32 = a32;
    params.a33 = a33;
    params.a41 = a41;
    params.a42 = a42;
    params.a43 = a43;    
    params.a44 = a44;

    % b 계수 저장
    params.b1 = b1;
    params.b2 = b2;
    params.b3 = b3;
    params.b4 = b4;

    % d 계수 저장
    params.d1 = d1;
    params.d2 = d2;
    params.d3 = d3;
    params.d4 = d4;

elseif num_substeps == 5
    % Compute 5-substep method coefficients
    % Define the equation to solve for gamma 1
    eq = (-43200*g1^8 + 115200*g1^7 - 136800*g1^6 + 83520*g1^5 - 28800*g1^4 ...
        + 5760*g1^3 - 660*g1^2 + 40*g1 - 1)/(120*g1^4*(360*g1^4 - 480*g1^3 + 180*g1^2 - 24*g1 + 1)) == rho_inf;
    
    % Solve the equation numerically
    sol = vpasolve(eq, g1);  
    
    % Select real solutions within the valid range 
    valid_sol = sol(imag(sol) == 0 & sol >= 0.2 & sol <= 2);
    
    % Assign the first valid solution if available; otherwise, throw an error
    if ~isempty(valid_sol)
        g1 = double(valid_sol(1));  % Store in params structure
    else
        error('No valid solution for g1 found. Please check the value of rho_inf.');
    end

    a11 = g1;
    a22 = g1;
    a33 = g1;
    a44 = g1;
    g2 = g1*(7200*g1^6 - 14400*g1^5 + 11400*g1^4 ...
        - 4320*g1^3 + 840*g1^2 - 80*g1 + 3)/(7200*g1^6 - 10800*g1^5 + 6840*g1^4 - 2160*g1^3 + 360*g1^2 - 30*g1 + 1);
    g3 = 5*g1*(5184000*g1^12 - 23328000*g1^11 + 45360000*g1^10 - 50414400*g1^9 + 35674560*g1^8 ...
        - 16935840*g1^7 + 5533920*g1^6 - 1256400*g1^5 + 197256*g1^4 - 20952*g1^3 + 1434*g1^2 - 57*g1 + 1)/(25920000*g1^12 - 90720000*g1^11 ...
        + 140832000*g1^10 - 127872000*g1^9 + 75700800*g1^8 - 30787200*g1^7 + 8812800*g1^6 - 1788000*g1^5 + 255240*g1^4 - 25020*g1^3 + 1600*g1^2 - 60*g1 + 1);
    g4 = g1*(671846400000000*g1^24 - 6382540800000000*g1^23 + 27904020480000000*g1^22 - 74854886400000000*g1^21 ...
        + 138546484992000000*g1^20 - 188540348544000000*g1^19 + 196228809446400000*g1^18 - 160363776153600000*g1^17 ...
        + 104810629570560000*g1^16 - 55503830880000000*g1^15 + 24036447617280000*g1^14 - 8566324948800000*g1^13 + 2522365681536000*g1^12 ...
        - 614767094496000*g1^11 + 124002392832000*g1^10 - 20653242840000*g1^9 + 2827390176000*g1^8 - 315777360000*g1^7 + 28451896800*g1^6 ...
        - 2034449400*g1^5 + 112679860*g1^4 - 4657530*g1^3 + 135150*g1^2 - 2455*g1 + 21)/(671846400000000*g1^24 - 5374771200000000*g1^23 ...
        + 19976232960000000*g1^22 - 45965491200000000*g1^21 + 73600213248000000*g1^20 - 87376983552000000*g1^19 + 80009012044800000*g1^18 ...
        - 58029955200000000*g1^17 + 33966358456320000*g1^16 - 16259672401920000*g1^15 + 6425442910080000*g1^14 - 2109213336960000*g1^13 ...
        + 577182824064000*g1^12 - 131829591744000*g1^11 + 25107067152000*g1^10 - 3974503248000*g1^9 + 520060694400*g1^8 - 55777286400*g1^7 ...
        + 4844511600*g1^6 - 334939200*g1^5 + 17979500*g1^4 - 721600*g1^3 + 20360*g1^2 - 360*g1 + 3);
    a55 = (360*g1^4 - 480*g1^3 + 180*g1^2 - 24*g1 + 1)/(6*(120*g1^4 - 240*g1^3 + 120*g1^2 - 20*g1 + 1));
    a32 = (-60*g1^3 + 60*g1^2 - 15*g1 + 1 + 5*a55*(24*g1^3 - 36*g1^2 + 12*g1 - 1))*(g1 - g3)*(-g2 + g3)/((g1 - g2)*(2 + g1^2*(20 - 60*g2) ...
        - 5*g2 + 10*a55*(6*g1^2 - 6*g1 + 1)*(-1 + 2*g2) + 5*g1*(-3 + 8*g2)));
    a42 = (g1 - g4)*(-g2 + g4)*(5*(240*g1^4 - 340*g1^3 + 164*g1^2 - 31*g1 ...
        + 2 + 40*a55^2*(6*g1^2 - 6*g1 + 1)^2 - 2*a55*(600*g1^4 - 1020*g1^3 + 574*g1^2 ...
        - 124*g1 + 9))*g3^2 + (20*g1^2 - 15*g1 + 2 - 10*a55*(6*g1^2 - 6*g1 + 1))^2*g4 ...
        - 5*g3*(200*g1^4 + 2 + g1^2*(163 - 16*g4) + g1*(-32 + 3*g4) + 4*g1^3*(-78 + 5*g4) ...
        - 4*a55*(300*g1^4 + 5 + g1^2*(326 - 28*g4) + 6*g1*(-12 + g4) + 6*g1^3*(-91 + 5*g4)) ...
        + 10*a55^2*(168*g1^4 + 5 + g1^2*(252 - 24*g4) + 24*g1^3*(-15 + g4) + g1*(-64 + 6*g4))) ...
        + 10*(-60*g1^3 + 60*g1^2 - 15*g1 + 1 + 5*a55*(24*g1^3 - 36*g1^2 + 12*g1 - 1))*g2^2*(-1 ...
        + g1*(2 - 6*g4) + 2*g4 + 2*a55*(2 - 3*g4 + g1*(-3 + 6*g4))) + g2*(-25*g3^2 + 5*g3*g4 ...
        + 20*g3 - 20*g4 + 6 - 600*g1^4*(6*g3^2 - 4*g3 + 4*g4 - 1) + 20*g1^3*(240*g3^2 - 175*g3 ...
        + 175*g4 - 48) - 10*g1^2*(220*g3^2 + 172*g4 - 51 - 2*g3*(86 + 5*g4)) + 5*g1*(80*g3^2 ...
        + 65*g4 - 20 - g3*(65 + 8*g4)) - 50*a55^2*(8*g3^2 + 8*g4 - 3 - 2*g3*(4 + g4) + 96*g1^4*(3*g3^2 ...
        - 3*g3 + 3*g4 - 1) - 24*g1^3*(24*g3^2 - 25*g3 + 25*g4 - 9) + 12*g1^2*(32*g3^2 + 34*g4 - 13 ...
        - 2*g3*(17 + g4)) - 2*g1*(48*g3^2 + 51*g4 - 20 - 3*g3*(17 + 2*g4))) + 20*a55*(10*g3^2 + 9*g4 ...
        - 3 - g3*(9 + 2*g4) + 60*g1^4*(12*g3^2 - 10*g3 + 10*g4 - 3) - 6*g1^3*(200*g3^2 - 175*g3 + 175*g4 - 56) ...
        + g1*(-140*g3^2 - 130*g4 + 45 + 2*g3*(65 + 7*g4)) + g1^2*(660*g3^2 + 602*g4 - 204 - 2*g3*(301 + 15*g4)))))/(2*(g1 ...
        - g2)*(2 + g1^2*(20 - 60*g2) - 5*g2 + 10*a55*(6*g1^2 - 6*g1 + 1)*(-1 + 2*g2) + 5*g1*(-3 + 8*g2))*(g2 ...
        - g3)*(10*g2*g3 - 5*g2 - 5*g3 + 3 - 5*g1*(6*g2*g3 - 2*g2 - 2*g3 + 1) + 5*a55*(-6*g2*g3 + 4*g2 + 4*g3 ...
        - 3 + 2*g1*(6*g2*g3 - 3*g2 - 3*g3 + 2))));
    a43 = (2 + g1^2*(20 - 60*g2) - 5*g2 + 10*a55*(6*g1^2 - 6*g1 + 1)*(-1 + 2*g2) ...
        + 5*g1*(-3 + 8*g2))*(g1 - g4)*(g2 - g4)*(g3 - g4)/(2*(g1 - g3)*(-g2 + g3)*(10*g2*g3 ...
        - 5*g2 - 5*g3 + 3 - 5*g1*(6*g2*g3 - 2*g2 - 2*g3 + 1) + 5*a55*(-6*g2*g3 + 4*g2 ...
        + 4*g3 - 3 + 2*g1*(6*g2*g3 - 3*g2 - 3*g3 + 2))));
    a52 = -(-1 + g1)*(100*a55^3*(6*g1^2 - 6*g1 + 1)*(-1 + 2*g2)*(-1 + g3)*(-3 ...
        + g2*(4 - 6*g3) + 4*g3 + 2*g1*(2 - 3*g3 + g2*(-3 + 6*g3)))*(-1 + g4)*(20*g3*g4 ...
        - 15*g3 - 15*g4 + 12 - 5*g2*(6*g3*g4 - 4*g3 - 4*g4 + 3) + 5*g1*(-6*g3*g4 + 4*g3 ...
        + 4*g4 - 3 + 2*g2*(6*g3*g4 - 3*g3 - 3*g4 + 2))) + (-3 + g2*(5 - 10*g3) + 5*g3 + 5*g1*(1 ...
        - 2*g3 + g2*(-2 + 6*g3)))*(200*g1^4*(2*g4^2 - g4 + 1 + 6*g2^4*(-1 + 3*g4) - g3*(2*g4^2 + 3)...
        + g3^2*(6*g4^2 - 2*g4 + 2) - 3*g2^3*(6*g3^2 + 6*g4^2 + 6*g4 - 1 + 2*g3*(-5 + 3*g4)) ...
        + g2*(-12*g4^2 + 4*g4 - 5 + 2*g3*(10 + g4) - 6*g3^2*(3*g4^2 + 2)) + g2^2*(24*g4^2 ...
        + 3*g4 + 5 + 6*g3^2*(4 + 3*g4) + g3*(18*g4^2 - 6*g4 - 41))) + (-1 + g2)*(10*g2^3*(-1 + 2*g4) ...
        - 10*g3^2*(4*g4^2 - 5*g4 + 2) - 4*(5*g4^2 - 7*g4 + 3) + g3*(50*g4^2 - 72*g4 + 32) ...
        - g2^2*(25*g3^2 + 20*g4^2 + 4 + 5*g3*(-9 + 4*g4)) + g2*(60*g4^2 - 76*g4 + 34 ...
        + 5*g3^2*(20*g4^2 - 25*g4 + 12) - 5*g3*(26*g4^2 - 39*g4 + 20))) + g1*(-122 ...
        + g2^4*(170 - 360*g4) + 272*g4 - 210*g4^2 - 5*g3^2*(92*g4^2 - 103*g4 + 42) ...
        + g3*(500*g4^2 - 687*g4 + 332) + 5*g2^3*(80*g3^2 + 72*g4^2 + 72*g4 - 23 + g3*(-145 + 72*g4)) ...
        - 5*g2^2*(206*g4^2 - 147*g4 + 81 + g3*(-248*g4^2 + 439*g4 - 366) + g3^2*(220*g4^2 - 240*g4 + 211))...
        + 5*g2*(182*g4^2 - 211*g4 + 98 + g3*(-366*g4^2 + 532*g4 - 297) + g3^2*(324*g4^2 - 361*g4 + 179))) ...
        - 10*g1^3*(90*g4^2 - 77*g4 + 47 + 60*g2^4*(-3 + 8*g4) + g3*(-160*g4^2 + 151*g4 - 137) ...
        + 10*g3^2*(25*g4^2 - 17*g4 + 9) - 2*g2^3*(240*g3^2 + 240*g4^2 + 240*g4 - 53 + 5*g3*(-83 + 48*g4)) ...
        + 2*g2^2*(390*g4^2 - 53*g4 + 97 + g3*(-668 + 245*g4) + 5*g3^2*(36*g4^2 + 77)) + g2*(-480*g4^2 + 322*g4 ...
        - 216 - 10*g3^2*(84*g4^2 - 49*g4 + 47) + g3*(480*g4^2 - 620*g4 + 782))) + 5*g1^2*(76 - 153*g4 + 138*g4^2 ...
        + 60*g2^4*(-3 + 7*g4) + g3*(-302*g4^2 + 369*g4 - 214) + 2*g3^2*(172*g4^2 - 159*g4 + 69) - 2*g2^3*(220*g3^2 ...
        + 210*g4^2 + 210*g4 - 59 + 14*g3*(-28 + 15*g4)) + g2^2*(g3*(-580*g4^2 + 1248*g4 - 1543) ...
        + 5*(176*g4^2 - 74*g4 + 55) + g3^2*(720*g4^2 - 560*g4 + 884)) + g2*(-660*g4^2 + 621*g4 ...
        - 325 - 4*g3^2*(300*g4^2 - 269*g4 + 161) + g3*(1080*g4^2 - 1493*g4 + 1071)))) - 2*a55*(-252 ...
        + 1032*g3 - 1380*g3^2 + 600*g3^3 + 582*g4 - 2342*g3*g4 + 3190*g3^2*g4 - 1475*g3^3*g4 - 390*g4^2 ...
        + 1560*g3*g4^2 - 2195*g3^2*g4^2 + 1100*g3^3*g4^2 - 25*g2^5*(11 - 18*g4 + 2*g3*(-9 + 16*g4)) ...
        + 5*g2^4*(200*g3^3 + 79 + 160*g3^2*(-3 + g4) - 140*g4 - 90*g4^2 + 5*g3*(32*g4^2 + 30*g4 + 19)) ...
        - 5*g2^3*(-495*g4^2 + 439*g4 - 197 + 10*g3^3*(100*g4^2 - 135*g4 + 94) - 5*g3^2*(388*g4^2 - 632*g4 + 435) ...
        + 4*g3*(410*g4^2 - 535*g4 + 329)) - 5*g2*(-414*g4^2 + 595*g4 - 261 + g3^2*(-2256*g4^2 + 3326*g4 - 1539) ...
        + 10*g3^3*(114*g4^2 - 153*g4 + 67) + g3*(1625*g4^2 - 2430*g4 + 1121)) + 5*g2^2*(-735*g4^2 + 958*g4 - 428 ...
        + g3^2*(-3700*g4^2 + 5601*g4 - 2928) + 5*g3^3*(378*g4^2 - 508*g4 + 255) + g3*(2760*g4^2 - 4040*g4 + 2027)) ...
        + 500*g1^5*(14*g4^2 - 9*g4 + 7 + g3*(-44*g4^2 + 23*g4 - 33) - 12*g3^3*(6*g4^2 - 3*g4 + 2) + g3^2*(78*g4^2 - 38*g4 + 50) ...
        + 12*g2^5*(8 - 15*g4 + 3*g3*(-5 + 12*g4)) + 6*g2^3*(-58*g4^2 - 11*g4 + 2 + 18*g3^3*(7 + 4*g4) + 6*g3^2*(12*g4^2 - 5*g4 - 47) ...
        + 4*g3*(24*g4^2 + 7*g4 + 29)) + 6*g2*(-16*g4^2 + 8*g4 - 7 + g3^2*(-46*g4^2 + 9*g4 - 65) + 4*g3*(9*g4^2 - 3*g4 + 10) ...
        + 2*g3^3*(30*g4^2 - 8*g4 + 15)) - 6*g2^2*(-44*g4^2 + 11*g4 - 12 - g3^2*(197 + 46*g4) + g3*(70*g4^2 + g4 + 106) ...
        + g3^3*(72*g4^2 + 30*g4 + 88)) - 6*g2^4*(72*g3^3 - 30*g4^2 - 42*g4 + 23 + 12*g3^2*(-13 + 6*g4) ...
        + g3*(72*g4^2 + 66*g4 + 22))) - 50*g1^4*(466*g4^2 - 434*g4 + 250 + g3*(-1672*g4^2 + 1579*g4 - 1143) ...
        - 10*g3^3*(213*g4^2 - 160*g4 + 79) + 3*g3^2*(936*g4^2 - 823*g4 + 561) + 60*g2^5*(35 - 64*g4 + 16*g3*(-4 + 9*g4)) ...
        - 12*g2^4*(720*g3^3 - 320*g4^2 - 458*g4 + 258 + 15*g3^2*(-107 + 48*g4) + g3*(720*g4^2 + 660*g4 + 217)) ...
        + 6*g2^3*(-1426*g4^2 - 2*g4 - 33 + g3^2*(-480*g4^2 + 2130*g4 - 6748) + 10*g3^3*(108*g4^2 - 6*g4 + 299) ...
        + g3*(2960*g4^2 - 932*g4 + 2975)) - 2*g2^2*(-3744*g4^2 + 1975*g4 - 1258 + 30*g3^3*(288*g4^2 - 141*g4 + 245) ...
        - 3*g3^2*(2660*g4^2 - 2914*g4 + 5477) + g3*(8952*g4^2 - 6805*g4 + 9343)) + g2*(-3034*g4^2 + 2427*g4 - 1463 ...
        + 60*g3^3*(189*g4^2 - 125*g4 + 93) - 6*g3^2*(2191*g4^2 - 1988*g4 + 2029) + g3*(9100*g4^2 - 8319*g4 + 7781))) ...
        + 5*g1*(864*g4^2 - 1225*g4 + 543 - 5*g3^3*(536*g4^2 - 665*g4 + 271) - 3*g3*(1145*g4^2 - 1648*g4 + 755) ...
        + g3^2*(4991*g4^2 - 6891*g4 + 3077) + 10*g2^5*(98 - 163*g4 + g3*(-163 + 300*g4)) - g2^4*(3400*g3^3 - 1630*g4^2 ...
        - 2500*g4 + 1477 + 20*g3^2*(-407 + 150*g4) + 30*g3*(100*g4^2 + 93*g4 + 44)) + g2^3*(-6780*g4^2 + 4517*g4 - 1973 ...
        + 10*g3^3*(1260*g4^2 - 1570*g4 + 1301) - 10*g3^2*(2260*g4^2 - 3749*g4 + 3010) + 2*g3*(10360*g4^2 - 12110*g4 + 8487)) ...
        + g2*(-4796*g4^2 + 6443*g4 - 2891 + g3^2*(-26102*g4^2 + 36909*g4 - 18091) + 10*g3^3*(1418*g4^2 - 1760*g4 + 795) ...
        + g3*(18438*g4^2 - 26441*g4 + 12879)) + g2^2*(9040*g4^2 - 10539*g4 + 4794 + g3*(-32450*g4^2 + 45090*g4 - 24494) ...
        - 10*g3^3*(2380*g4^2 - 2954*g4 + 1607) + g3^2*(43180*g4^2 - 63722*g4 + 36719))) + 10*g1^3*(2885*g4^2 - 3289*g4 ...
        + 1644 + 25*g3^2*(707*g4^2 - 783*g4 + 417) - 5*g3^3*(2326*g4^2 - 2199*g4 + 957) - 4*g3*(2765*g4^2 - 3259*g4 + 1821) ...
        + 150*g2^5*(56 - 99*g4 + g3*(-99 + 206*g4)) - 5*g2^4*(6360*g3^3 - 2970*g4^2 - 4356*g4 + 2525 + 12*g3^2*(-1216 + 515*g4) ...
        + 10*g3*(618*g4^2 + 567*g4 + 199)) + g2^3*(-39180*g4^2 + 7875*g4 - 3757 + 30*g3^3*(1680*g4^2 - 1340*g4 + 2657) ...
        - 10*g3^2*(6270*g4^2 - 12225*g4 + 18166) + 10*g3*(9540*g4^2 - 6669*g4 + 8672)) + g2^2*(39700*g4^2 - 30493*g4 ...
        + 15942 - 20*g3^3*(5205*g4^2 - 4512*g4 + 3799) + 5*g3^2*(28032*g4^2 - 36846*g4 + 34127) - 2*g3*(58790*g4^2 ...
        - 63695*g4 + 51289)) + g2*(-17800*g4^2 + 18261*g4 - 9343 + 10*g3^3*(6306*g4^2 - 5770*g4 + 3179) - 5*g3^2*(18154*g4^2 ...
        - 21189*g4 + 14043) + g3*(61590*g4^2 - 72395*g4 + 46601))) - 5*g1^2*(1989 - 4297*g4 + 3310*g4^2 - 10*g3^3*(1169*g4^2 ...
        - 1292*g4 + 534) - 4*g3*(3265*g4^2 - 4348*g4 + 2135) + g3^2*(19870*g4^2 - 25119*g4 + 11891) + 10*g2^5*(607 - 1038*g4 ...
        + 6*g3*(-173 + 336*g4)) - 10*g2^4*(2160*g3^3 + 4*g3^2*(-1271 + 504*g4) - 3*(346*g4^2 + 520*g4 - 307) + g3*(2016*g4^2 ...
        + 1860*g4 + 737)) + 2*g2^3*(-16835*g4^2 + 7175*g4 - 3144 + 10*g3^3*(2760*g4^2 - 2985*g4 + 3328) - 5*g3^2*(8724*g4^2 ...
        - 15032*g4 + 15303) + g3*(46590*g4^2 - 45230*g4 + 39736)) - 2*g2^2*(-19695*g4^2 + 19334*g4 - 9213 + g3^2*(-85790*g4^2 ...
        + 121025*g4 - 82486) + 5*g3^3*(10614*g4^2 - 11558*g4 + 7287) + g3*(66000*g4^2 - 83687*g4 + 52348)) + g2*(-19350*g4^2 ...
        + 23293*g4 - 10945 + 20*g3^3*(3149*g4^2 - 3461*g4 + 1666) - 2*g3^2*(52285*g4^2 - 68700*g4 + 37352) + g3*(71990*g4^2 ...
        - 95735*g4 + 51433)))) + 10*a55^2*(-234 + 900*g3 - 1136*g3^2 + 470*g3^3 + 534*g4 - 2040*g3*g4 + 2621*g3^2*g4 - 1130*g3^3*g4 ...
        - 330*g4^2 + 1265*g3*g4^2 - 1670*g3^2*g4^2 + 760*g3^3*g4^2 - 50*g2^5*(3 - 4*g4 + g3*(-4 + 6*g4)) + 5*g2^4*(80*g3^3 ...
        - 40*g4^2 - 60*g4 + 49 + 20*g3^2*(-10 + 3*g4) + 10*g3*(6*g4^2 + 5*g4 + 4)) - 5*g2^3*(-330*g4^2 + 392*g4 - 159 ...
        + 20*g3^3*(33*g4^2 - 49*g4 + 28) + 10*g3*(113*g4^2 - 169*g4 + 90) - 8*g3^2*(175*g4^2 - 289*g4 + 167)) + 5*g2^2*(-545*g4^2 ...
        + 813*g4 - 355 + g3^2*(-2650*g4^2 + 4234*g4 - 2049) + 2*g3^3*(616*g4^2 - 915*g4 + 429) + g3*(2028*g4^2 - 3222*g4 + 1529)) ...
        + g2*(g3*(-6240*g4^2 + 10039*g4 - 4549) - 20*g3^3*(189*g4^2 - 281*g4 + 122) + 5*(328*g4^2 - 519*g4 + 228) + 2*g3^2*(4115*g4^2 ...
        - 6502*g4 + 2932)) + 600*g1^5*(4*g4^2 - 3*g4 + 2 + g3*(-14*g4^2 + 10*g4 - 9) - 6*g3^3*(3*g4^2 - 2*g4 + 1) + g3^2*(24*g4^2 ...
        - 17*g4 + 13) + 12*g2^5*(2 - 3*g4 + g3*(-3 + 6*g4)) - 2*g2^4*(36*g3^3 - 18*g4^2 - 24*g4 + 19 + 12*g3^2*(-7 + 3*g4) ...
        + 6*g3*(6*g4^2 + 5*g4 + 2)) + 2*g2^3*(-36*g4^2 - 3*g4 + 4 + 6*g3^3*(11 + 6*g4) + 12*g3*(4*g4^2 + g4 + 6) + 3*g3^2*(12*g4^2 - 6*g4 - 53)) ...
        + 2*g2*(-11*g4^2 + 6*g4 - 5 + g3^2*(-33*g4^2 + 9*g4 - 41) + 6*g3^3*(6*g4^2 - 2*g4 + 3) + g3*(24*g4^2 - 8*g4 + 27)) ...
        - g2^2*(-56*g4^2 + 18*g4 - 15 - 2*g3^2*(115 + 33*g4) + 12*g3^3*(6*g4^2 + 3*g4 + 8) + g3*(72*g4^2 + 10*g4 + 135))) ...
        - 40*g1^4*(265*g4^2 - 301*g4 + 153 + g3*(-1000*g4^2 + 1157*g4 - 655) - 45*g3^3*(22*g4^2 - 21*g4 + 9) + g3^2*(1575*g4^2 - 1723*g4 + 907) ...
        + 30*g2^5*(31 - 45*g4 + g3*(-45 + 84*g4)) - 3*g2^4*(840*g3^3 - 450*g4^2 - 610*g4 + 507 + 30*g3^2*(-67 + 28*g4) ...
        + 10*g3*(84*g4^2 + 69*g4 + 26)) + 3*g2^3*(-1130*g4^2 + 267*g4 - 2 + 120*g3^3*(9*g4^2 - 6*g4 + 17) + 6*g3*(385*g4^2 ...
        - 260*g4 + 401) - 2*g3^2*(600*g4^2 - 1305*g4 + 2428)) + g2*(-1470*g4^2 + 1489*g4 - 790 + g3^2*(-6690*g4^2 + 7401*g4 ...
        - 5547) + 90*g3^3*(52*g4^2 - 45*g4 + 27) + 7*g3*(660*g4^2 - 745*g4 + 547)) - 3*g2^2*(-1090*g4^2 + 836*g4 - 416 ...
        + 90*g3^3*(26*g4^2 - 20*g4 + 21) - 5*g3^2*(594*g4^2 - 752*g4 + 885) + 4*g3*(680*g4^2 - 707*g4 + 694))) + 10*g1^3*(g3*(-6240*g4^2 ...
        + 8499*g4 - 4173) - 10*g3^3*(519*g4^2 - 595*g4 + 244) + 2*(806*g4^2 - 1083*g4 + 505) + g3^2*(9278*g4^2 - 11989*g4 + 5603) ...
        + 60*g2^5*(57 - 80*g4 + 2*g3*(-40 + 69*g4)) - 12*g2^4*(720*g3^3 - 400*g4^2 - 555*g4 + 477 + 10*g3^2*(-176 + 69*g4) ...
        + 5*g3*(138*g4^2 + 112*g4 + 45)) + 6*g2^3*(-2560*g4^2 + 1300*g4 - 303 + 20*g3^3*(192*g4^2 - 213*g4 + 229) ...
        - 4*g3^2*(1545*g4^2 - 2678*g4 + 2714) + g3*(6520*g4^2 - 6838*g4 + 5868)) - 6*g2^2*(-2941*g4^2 + 3066*g4 - 1379 ...
        + g3^2*(-11792*g4^2 + 16869*g4 - 11787) + 10*g3^3*(714*g4^2 - 791*g4 + 505) + g3*(9183*g4^2 - 12096*g4 + 7802)) ...
        + g2*(-8772*g4^2 + 11011*g4 - 5197 + 30*g3^3*(868*g4^2 - 975*g4 + 475) - 4*g3^2*(11148*g4^2 - 14863*g4 + 8227) ...
        + g3*(31164*g4^2 - 42557*g4 + 23561))) + g1*(3275*g4^2 - 5133*g4 + 2268 + g3*(-12605*g4^2 + 19767*g4 - 8857) ...
        - 20*g3^3*(409*g4^2 - 576*g4 + 237) + g3^2*(17110*g4^2 - 25919*g4 + 11329) + 50*g2^5*(49 - 66*g4 + 6*g3*(-11 + 17*g4)) ...
        - 50*g2^4*(120*g3^3 - 66*g4^2 - 97*g4 + 83 + 2*g3^2*(-151 + 51*g4) + g3*(102*g4^2 + 84*g4 + 47)) ...
        + 5*g2^3*(-3860*g4^2 + 3850*g4 - 1431 + 20*g3^3*(372*g4^2 - 525*g4 + 331) - 4*g3^2*(3735*g4^2 ...
        - 6179*g4 + 3946) + 2*g3*(6210*g4^2 - 8733*g4 + 5009)) - 5*g2^2*(-5826*g4^2 + 8109*g4 - 3527 ...
        + 4*g3^3*(3417*g4^2 - 4814*g4 + 2347) - 4*g3^2*(6965*g4^2 - 10904*g4 + 5569) + g3*(21138*g4^2 ...
        - 32546*g4 + 16141)) + g2*(-16750*g4^2 + 25423*g4 - 11248 + 40*g3^3*(1032*g4^2 - 1454*g4 + 637) ...
        - 2*g3^2*(42665*g4^2 - 65454*g4 + 30329) + g3*(63300*g4^2 - 99141*g4 + 46191))) + g1^2*(-10920*g4^2 ...
        + 16127*g4 - 7247 + 10*g3^3*(3076*g4^2 - 3975*g4 + 1619) - 10*g3^2*(6004*g4^2 - 8535*g4 + 3799) ...
        + g3*(42400*g4^2 - 62977*g4 + 29047) - 300*g2^5*(46 - 63*g4 + 3*g3*(-21 + 34*g4)) + 10*g2^4*(3360*g3^3 ...
        - 1890*g4^2 - 2700*g4 + 2339 + 90*g3^2*(-93 + 34*g4) + 30*g3*(102*g4^2 + 83*g4 + 38)) - 10*g2^3*(-8010*g4^2 ...
        + 6109*g4 - 1964 + 60*g3^3*(240*g4^2 - 311*g4 + 235) - 6*g3^2*(4430*g4^2 - 7373*g4 + 5579) ...
        + g3*(23550*g4^2 - 29788*g4 + 19681)) + 10*g2^2*(-10696*g4^2 + 13288*g4 - 5813 + g3^2*(-49146*g4^2 + 74196*g4 - 42020) ...
        + 12*g3^3*(2182*g4^2 - 2813*g4 + 1491) + g3*(37088*g4^2 - 53925*g4 + 29180)) - 2*g2*(-28850*g4^2 + 40697*g4 ...
        - 18352 + 10*g3^3*(7827*g4^2 - 10094*g4 + 4547) - 5*g3^2*(29946*g4^2 - 43533*g4 + 21319) + g3*(107610*g4^2 ...
        - 160127*g4 + 78852)))))/(2*(g1 - g2)*(2 + g1^2*(20 - 60*g2) - 5*g2 + 10*a55*(6*g1^2 - 6*g1 + 1)*(-1 + 2*g2) ...
        + 5*g1*(-3 + 8*g2))*(g2 - g3)*(10*g2*g3 - 5*g2 - 5*g3 + 3 - 5*g1*(6*g2*g3 - 2*g2 - 2*g3 + 1) + 5*a55*(-6*g2*g3 ...
        + 4*g2 + 4*g3 - 3 + 2*g1*(6*g2*g3 - 3*g2 - 3*g3 + 2)))*(g2 - g4)*(20*g3*g4 - 15*g3 - 15*g4 + 12 - 5*g2*(6*g3*g4 ...
        - 4*g3 - 4*g4 + 3) + 5*g1*(-6*g3*g4 + 4*g3 + 4*g4 - 3 + 2*g2*(6*g3*g4 - 3*g3 - 3*g4 + 2))));
    a53 = (-1 + g1)*(-1 + g2)*(-50*g1^3*(1 - 2*g3 + g2*(-2 + 6*g3))*(-2*g3^2 - 2*g4^2 + g4 ...
        - 1 + 2*g3*(1 + g4) + g2*(6*g3^2 + 6*g4^2 - 2*g4 + 2 - 6*g3*(1 + g4))) - 10*a55^2*(-3 + g2*(4 ...
        - 6*g3) + 4*g3 + 2*g1*(2 - 3*g3 + g2*(-3 + 6*g3)))*(-1 + g4)*(20*g3*g4 - 15*g3 - 15*g4 + 12 ...
        - 5*g2*(6*g3*g4 - 4*g3 - 4*g4 + 3) + 5*g1*(-6*g3*g4 + 4*g3 + 4*g4 - 3 + 2*g2*(6*g3*g4 - 3*g3 ...
        - 3*g4 + 2))) + (-1 + g3)*(-5*g2*(9*g3^2 + 22*g4^2 - 29*g4 + 12 + g3*(-40*g4^2 + 53*g4 - 27)) ...
        + 25*g2^2*(2*g3^2 + 4*g4^2 - 5*g4 + 2 + g3*(-8*g4^2 + 10*g4 - 5)) + 2*(5*g3^2 + g3*(-25*g4^2 ...
        + 35*g4 - 18) + 3*(5*g4^2 - 7*g4 + 3))) + g1*(-95*g3^3 + 140*g4^2 - 163*g4 + 78 + 5*g3^2*(40*g4^2 ...
        - 43*g4 + 52) - 5*g3*(72*g4^2 - 82*g4 + 51) - 50*g2^2*(11*g3^3 - 12*g4^2 + 12*g4 - 5 + g3^2*(-24*g4^2 ...
        + 23*g4 - 26) + g3*(38*g4^2 - 38*g4 + 21)) + 10*g2*(46*g3^3 - 59*g4^2 + 63*g4 - 28 ...
        - 2*g3^2*(50*g4^2 - 51*g4 + 59) + g3*(168*g4^2 - 179*g4 + 105))) ...
        + 5*g1^2*(50*g3^3 - 42*g4^2 + 37*g4 - 22 + g3^2*(-40*g4^2 + 10*g4 - 97) ...
        + g3*(100*g4^2 - 75*g4 + 79) + 20*g2^2*(18*g3^3 - 11*g4^2 + 8*g4 - 4 + g3^2*(-18*g4^2 + 6*g4 - 31) ...
        + 4*g3*(9*g4^2 - 6*g4 + 5)) - 2*g2*(135*g3^3 - 98*g4^2 + 77*g4 - 42 + g3^2*(-120*g4^2 + 35*g4 - 248) ...
        + g3*(270*g4^2 - 190*g4 + 181))) + 2*a55*(200*g3^2*g4^2 - 25*g3^3 - 310*g3^2*g4 - 310*g3*g4^2 + 175*g3^2 ...
        + 480*g3*g4 + 120*g4^2 - 225*g3 - 186*g4 + 81 - 25*g2^2*(4*g3^3 - 12*g4^2 + 17*g4 - 7 + g3^2*(-24*g4^2 + 34*g4 - 20) ...
        + g3*(34*g4^2 - 48*g4 + 22)) + 5*g2*(20*g3^3 - 77*g4^2 + 114*g4 - 48 + g3^2*(-140*g4^2 + 208*g4 - 119) ...
        + 2*g3*(104*g4^2 - 154*g4 + 71)) + 50*g1^3*(6*g3^3 - 4*g4^2 + 3*g4 - 2 - 3*g3^2*(3 + 2*g4) + 6*g3*(g4^2 + 1) ...
        + g2*(-30*g3^3 + 18*g4^2 - 13*g4 + 7 + 6*g3^2*(7 + 5*g4) - 6*g3*(5*g4^2 + 4)) + 6*g2^2*(6*g3^3 - 3*g4^2 + 2*g4 ...
        - 1 - 2*g3^2*(4 + 3*g4) + g3*(6*g4^2 + 4))) - 10*g1^2*(45*g3^3 - 55*g4^2 + 62*g4 - 31 - 2*g3^2*(30*g4^2 - 25*g4 + 52) ...
        + 3*g3*(40*g4^2 - 40*g4 + 31) + 5*g2^2*(48*g3^3 - 42*g4^2 + 41*g4 - 17 - 6*g3^2*(12*g4^2 - 9*g4 + 16) ...
        + 6*g3*(19*g4^2 - 16*g4 + 11)) + g2*(-210*g3^3 + 225*g4^2 - 236*g4 + 104 + 3*g3^2*(100*g4^2 - 80*g4 + 151) ...
        - 4*g3*(135*g4^2 - 125*g4 + 89))) + 5*g1*(40*g3^3 - 92*g4^2 + 126*g4 - 57 + g3^2*(-140*g4^2 + 188*g4 - 151) ...
        + 2*g3*(114*g4^2 - 154*g4 + 83) + 10*g2^2*(18*g3^3 - 29*g4^2 + 35*g4 - 14 + g3^2*(-60*g4^2 + 72*g4 - 56) ...
        + 2*g3*(42*g4^2 - 50*g4 + 25)) + g2*(-170*g3^3 + 338*g4^2 - 433*g4 + 181 - 6*g3*(151*g4^2 - 192*g4 + 98) ...
        + g3^2*(600*g4^2 - 766*g4 + 592)))))/(2*(g1 - g3)*(-g2 + g3)*(10*g2*g3 - 5*g2 - 5*g3 + 3 ...
        - 5*g1*(6*g2*g3 - 2*g2 - 2*g3 + 1) + 5*a55*(-6*g2*g3 + 4*g2 + 4*g3 - 3 ...
        + 2*g1*(6*g2*g3 - 3*g2 - 3*g3 + 2)))*(g3 - g4)*(20*g3*g4 - 15*g3 - 15*g4 + 12 ...
        - 5*g2*(6*g3*g4 - 4*g3 - 4*g4 + 3) + 5*g1*(-6*g3*g4 + 4*g3 + 4*g4 - 3 + 2*g2*(6*g3*g4 - 3*g3 - 3*g4 + 2))));
    a54 = (-1 + g1)*(-1 + g2)*(-1 + g3)*((-3 + g2*(5 - 10*g3) + 5*g3 ...
        + 5*g1*(1 - 2*g3 + g2*(-2 + 6*g3)))*(-1 + g1 + g4) + a55*(-20*g3*g4 + 15*g3 + 15*g4 - 12 + 5*g2*(6*g3*g4 - 4*g3 - 4*g4 + 3) ...
        - 5*g1*(-6*g3*g4 + 4*g3 + 4*g4 - 3 + 2*g2*(6*g3*g4 - 3*g3 - 3*g4 + 2))))/((g1 - g4)*(-g2 ...
        + g4)*(-g3 + g4)*(20*g3*g4 - 15*g3 - 15*g4 + 12 - 5*g2*(6*g3*g4 - 4*g3 - 4*g4 + 3) ...
        + 5*g1*(-6*g3*g4 + 4*g3 + 4*g4 - 3 + 2*g2*(6*g3*g4 - 3*g3 - 3*g4 + 2))));
    a21 = g2 - a22;
    a31 = g3 - a32 - a33;
    a41 = g4 - a44 - a42 - a43;
    a51 = 1 - a52 - a53 - a54 - a55;
    b1 = (-3 + g3*(5 - 10*g4) + 5*g4 + 5*g2*(1 - 2*g4 + g3*(-2 + 6*g4)))/(60*(-1 + g1)*(-g2 + g1)*(g1 - g3)*(g1 - g4));
    b2 = (3 - 5*g4 + 5*g3*(-1 + 2*g4) - 5*g1*(1 - 2*g4 + g3*(-2 + 6*g4)))/(60*(-g2 + g1)*(-1 + g2)*(g2 - g3)*(g2 - g4));
    b3 = (3 - 5*g4 + 5*g2*(-1 + 2*g4) - 5*g1*(1 - 2*g4 + g2*(-2 + 6*g4)))/(60*(g1 - g3)*(-1 + g3)*(-g2 + g3)*(g3 - g4));
    b4 = (3 - 5*g3 + 5*g2*(-1 + 2*g3) - 5*g1*(1 - 2*g3 + g2*(-2 + 6*g3)))/(60*(g1 - g4)*(-1 + g4)*(-g2 + g4)*(-g3 + g4));
    b5 = (20*g3*g4 - 15*g3 - 15*g4 + 12 - 5*g2*(6*g3*g4 - 4*g3 - 4*g4 + 3) ...
        + 5*g1*(-6*g3*g4 + 4*g3 + 4*g4 - 3 + 2*g2*(6*g3*g4 - 3*g3 - 3*g4 + 2)))/(60*(-1 + g1)*(-1 + g2)*(-1 + g3)*(-1 + g4));
    d5 = (671846400000000*g1^24 - 5374771200000000*g1^23 + 19976232960000000*g1^22 ...
        - 45965491200000000*g1^21 + 73600213248000000*g1^20 - 87376983552000000*g1^19 ...
        + 80009012044800000*g1^18 - 58029955200000000*g1^17 + 33966358456320000*g1^16 ...
        - 16259672401920000*g1^15 + 6425442910080000*g1^14 - 2109213336960000*g1^13 + 577182824064000*g1^12 ...
        - 131829591744000*g1^11 + 25107067152000*g1^10 - 3974503248000*g1^9 + 520060694400*g1^8 ...
        - 55777286400*g1^7 + 4844511600*g1^6 - 334939200*g1^5 + 17979500*g1^4 - 721600*g1^3 + 20360*g1^2 ...
        - 360*g1 + 3)^4*(7200*g1^7 - 21600*g1^6 + 22200*g1^5 - 11160*g1^4 + 3000*g1^3 - 440*g1^2 + 33*g1 ...
        - 1)*(-1 + g1)*(360*g1^4 - 480*g1^3 + 180*g1^2 - 24*g1 + 1)*(25920000*g1^13 - 142560000*g1^12 + 317520000*g1^11 ...
        - 392904000*g1^10 + 306244800*g1^9 - 160380000*g1^8 + 58456800*g1^7 - 15094800*g1^6 + 2774280*g1^5 ...
        - 360000*g1^4 + 32190*g1^3 - 1885*g1^2 + 65*g1 - 1)/(12*(671846400000000*g1^24 - 6382540800000000*g1^23 ...
        + 27904020480000000*g1^22 - 74854886400000000*g1^21 + 138546484992000000*g1^20 - 188540348544000000*g1^19 ...
        + 196228809446400000*g1^18 - 160363776153600000*g1^17 + 104810629570560000*g1^16 - 55503830880000000*g1^15 ...
        + 24036447617280000*g1^14 - 8566324948800000*g1^13 + 2522365681536000*g1^12 - 614767094496000*g1^11 ...
        + 124002392832000*g1^10 - 20653242840000*g1^9 + 2827390176000*g1^8 - 315777360000*g1^7 ...
        + 28451896800*g1^6 - 2034449400*g1^5 + 112679860*g1^4 - 4657530*g1^3 + 135150*g1^2 - 2455*g1 + 21)*(120*g1^4 ...
        - 240*g1^3 + 120*g1^2 - 20*g1 + 1)*(4837294080000000000*g1^29 - 45551185920000000000*g1^28 ...
        + 202642311168000000000*g1^27 - 567522091008000000000*g1^26 + 1124560690790400000000*g1^25 ...
        - 1679546463897600000000*g1^24 + 1966336764042240000000*g1^23 - 1852846020900864000000*g1^22 ...
        + 1431642409809408000000*g1^21 - 919504493597030400000*g1^20 + 495899038910131200000*g1^19 ...
        - 226279500604416000000*g1^18 + 87853249224460800000*g1^17 - 29140743971658240000*g1^16 ...
        + 8280721241199360000*g1^15 - 2019014710917120000*g1^14 + 422574749262720000*g1^13 ...
        - 75867370844544000*g1^12 + 11661682075776000*g1^11 - 1529663230656000*g1^10 + 170385022224000*g1^9 ...
        - 16005613159200*g1^8 + 1256024175600*g1^7 - 81275412000*g1^6 + 4259075000*g1^5 - 176147900*g1^4 ...
        + 5532230*g1^3 - 123960*g1^2 + 1765*g1 - 12)*(4353564672000000000000*g1^35 - 49920874905600000000000*g1^34 ...
        + 273331301990400000000000*g1^33 - 952168129413120000000000*g1^32 + 2372144922685440000000000*g1^31 ...
        - 4503733790662656000000000*g1^30 + 6780402198180864000000000*g1^29 - 8315626593073766400000000*g1^28 ...
        + 8469814350900326400000000*g1^27 - 7268070987848908800000000*g1^26 + 5312210905712240640000000*g1^25 ...
        - 3335183532961376256000000*g1^24 + 1810640159680882176000000*g1^23 - 854428565740750848000000*g1^22 ...
        + 351902237162901120000000*g1^21 - 126892873491790003200000*g1^20 + 40155214799048947200000*g1^19 ...
        - 11169925622058931200000*g1^18 + 2733965177140742400000*g1^17 - 589016035101761280000*g1^16 ...
        + 111669206299848000000*g1^15 - 18612362891537280000*g1^14 + 2722713624186480000*g1^13 - 348692977955376000*g1^12 ...
        + 38959101808488000*g1^11 - 3779807541696000*g1^10 + 316488087396000*g1^9 - 22687394978400*g1^8 + 1377771717000*g1^7 ...
        - 69897540800*g1^6 + 2906679150*g1^5 - 96474330*g1^4 + 2456935*g1^3 - 45070*g1^2 + 530*g1 - 3)*(1007769600000000*g1^23 ...
        - 7927787520000000*g1^22 + 28889395200000000*g1^21 - 64946271744000000*g1^20 + 101163364992000000*g1^19 ...
        - 116219797401600000*g1^18 + 102333820953600000*g1^17 - 70844271114240000*g1^16 + 39244158478080000*g1^15 ...
        - 17611004707200000*g1^14 + 6457111611840000*g1^13 - 1945182857472000*g1^12 + 482937502752000*g1^11 ...
        - 98895325680000*g1^10 + 16678739592000*g1^9 - 2307329481600*g1^8 + 260000073600*g1^7 - 23607385200*g1^6 ...
        + 1699510200*g1^5 - 94700360*g1^4 + 3935930*g1^3 - 114790*g1^2 + 2095*g1 - 18)*g1^4);
    d4 = -d5*(1 + 20*g1*(-3 + g1*(80 + 3*g1*(-417 + 2*g1*(2127 + 20*g1*(-745 + 6*g1*(612 + g1*(-2138 ...
        + g1*(5257 + 60*g1*(-148 + g1*(163 + 15*g1*(-7 + 2*g1))))))))))))^4*(-18 + 5*g1*(419 + 2*g1*(-11479 ...
        + g1*(393593 + 4*g1*(-2367509 + 15*g1*(2832517 + 2*g1*(-19672821 + 4*g1*(54166682 + 3*g1*(-160231214 ...
        + 15*g1*(77216387 + 2*g1*(-228924365 + 2*g1*(558955443 + 2*g1*(-1125684524 + 5*g1*(747350881 + 6*g1*(-339718455 ...
        + 2*g1*(378512331 + 4*g1*(-170824342 + 15*g1*(16450267 + 3*g1*(-6227484 + 5*g1*(1084141 ...
        + 12*g1*(-58001 + 60*g1*(430 + g1*(-118 + 15*g1)))))))))))))))))))))))*(21 + 5*g1*(-491 ...
        + 2*g1*(13515 + g1*(-465753 + 2*g1*(5633993 + 30*g1*(-3390749 + 4*g1*(11854957 + 10*g1*(-13157390 ...
        + 3*g1*(39269308 + 3*g1*(-95616865 + 4*g1*(143521288 + g1*(-711535989 + 2*g1*(1459702362 ...
        + 5*g1*(-991472795 + 12*g1*(231833021 + g1*(-535337875 + 4*g1*(252726248 + 15*g1*(-25778642 ...
        + 3*g1*(10514661 + 5*g1*(-2020537 + 6*g1*(247461 + 20*g1*(-6685 + 2*g1*(1246 + 15*g1*(-19 ...
        + 2*g1))))))))))))))))))))))))*(-3 + g1*(381 + 5*g1*(-4563 + 2*g1*(85675 + g1*(-2263703 ...
        + 2*g1*(22380953 + 30*g1*(-11464935 + 4*g1*(35095493 + 2*g1*(-174132928 + 15*g1*(94470742 + 3*g1*(-211853287 ...
        + 4*g1*(296101834 + g1*(-1379571665 + 2*g1*(2680311932 + 5*g1*(-1735158317 + 12*g1*(388658565 + g1*(-862945499 ...
        + 4*g1*(392651873 + 15*g1*(-38640173 + 3*g1*(15196641 + 5*g1*(-2809291 + 6*g1*(329561 ...
        + 20*g1*(-8469 + 2*g1*(1486 + 15*g1*(-21 + 2*g1)))))))))))))))))))))))))*(-12 + 5*g1*(353 ...
        + 2*g1*(-12396 + g1*(553223 + 10*g1*(-1761479 + 2*g1*(21295375 + 6*g1*(-67729510 ...
        + g1*(1046686813 + 2*g1*(-6669005483 + 60*g1*(1183229321 + 4*g1*(-2655665331 + 2*g1*(10122987913 ...
        + 3*g1*(-21952364249 + 5*g1*(24454557249 + 2*g1*(-58420564552 + 3*g1*(79868067527 + 2*g1*(-140532137209 ...
        + 5*g1*(84735001181 + 6*g1*(-36374662520 + g1*(79716280689 + 2*g1*(-73905646669 + 30*g1*(3835633171 ...
        + 2*g1*(-2482057534 + 45*g1*(58535307 + 10*g1*(-4999793 + 8*g1*(418459 + 5*g1*(-42236 + 3*g1*(5027 ...
        + 10*g1*(-113 + 12*g1)))))))))))))))))))))))))))))/(5*(-4 + 5*g1*(45 + 2*g1*(-557 + 6*g1*(1329 ...
        + 4*g1*(-3046 + 5*g1*(3745 + 6*g1*(-2619 + 5*g1*(1497 + 2*g1*(-1426 + 3*g1*(575 + 2*g1*(-199 ...
        + 60*g1)))))))))))*(1 + 3*g1*(-19 + 2*g1*(239 + 4*g1*(-873 + g1*(8219 + 30*g1*(-1745 + 2*g1*(3843 ...
        + g1*(-11761 + 6*g1*(4129 + 15*g1*(-389 + 10*g1*(35 + 2*g1*(-9 + 2*g1))))))))))))*(-1 + 5*g1*(13 ...
        + g1*(-377 + 6*g1*(1073 + 4*g1*(-3000 + g1*(23119 + 30*g1*(-4193 + 2*g1*(8119 + 3*g1*(-7425 ...
        + 2*g1*(7089 + 5*g1*(-1819 + 30*g1*(4*g1^2 - 22*g1 + 49))))))))))))*(-2 + 5*g1*(35 + 8*g1*(-177 ...
        + g1*(4387 + 3*g1*(-24818 + 15*g1*(20369 + 4*g1*(-47021 + 2*g1*(166115 + 3*g1*(-302768 + 5*g1*(257491 ...
        + 8*g1*(-106380 + g1*(271695 + g1*(-529894 + 45*g1*(17191 + 20*g1*(-909 + 2*g1*(329 + 2*g1*(-73 ...
        + 15*g1)))))))))))))))))*(3 + 20*g1*(-18 + g1*(1018 + 5*g1*(-7216 + g1*(179795 + 12*g1*(-279116 ...
        + g1*(4037093 + 8*g1*(-5810134 + 9*g1*(6019221 + 5*g1*(-9200239 + g1*(58118211 + 4*g1*(-76290273 ...
        + 2*g1*(167008919 + 5*g1*(-122060957 + 3*g1*(123947587 + 8*g1*(-39206386 + g1*(81901906 ...
        + 15*g1*(-9328375 + 9*g1*(1429059 + 10*g1*(-156066 + g1*(131459 + 20*g1*(-4105 + 4*g1*(446 + 15*(-8 + g1)*g1)))))))))))))))))))))))^4);
    d1 = 2*d5*(1007769600000000*g1^23 - 7927787520000000*g1^22 + 28889395200000000*g1^21 ...
        - 64946271744000000*g1^20 + 101163364992000000*g1^19 - 116219797401600000*g1^18 ...
        + 102333820953600000*g1^17 - 70844271114240000*g1^16 + 39244158478080000*g1^15 ...
        - 17611004707200000*g1^14 + 6457111611840000*g1^13 - 1945182857472000*g1^12 ...
        + 482937502752000*g1^11 - 98895325680000*g1^10 + 16678739592000*g1^9 ...
        - 2307329481600*g1^8 + 260000073600*g1^7 - 23607385200*g1^6 + 1699510200*g1^5 ...
        - 94700360*g1^4 + 3935930*g1^3 - 114790*g1^2 + 2095*g1 - 18)*(671846400000000*g1^25 ...
        - 7054387200000000*g1^24 + 33278791680000000*g1^23 - 94831119360000000*g1^22 ...
        + 184511976192000000*g1^21 - 262140561792000000*g1^20 + 283605792998400000*g1^19 ...
        - 240372788198400000*g1^18 + 162840584770560000*g1^17 - 89470189336320000*g1^16 ...
        + 40296120019200000*g1^15 - 14991767858880000*g1^14 + 4631579018496000*g1^13 ...
        - 1191949918560000*g1^12 + 255831984576000*g1^11 - 45760309992000*g1^10 + 6801893424000*g1^9 ...
        - 835838054400*g1^8 + 84229183200*g1^7 - 6878961000*g1^6 + 447619060*g1^5 ...
        - 22637030*g1^4 + 856750*g1^3 - 22815*g1^2 + 381*g1 - 3)*(4837294080000000000*g1^29 ...
        - 45551185920000000000*g1^28 + 202642311168000000000*g1^27 - 567522091008000000000*g1^26 ...
        + 1124560690790400000000*g1^25 - 1679546463897600000000*g1^24 + 1966336764042240000000*g1^23 ...
        - 1852846020900864000000*g1^22 + 1431642409809408000000*g1^21 - 919504493597030400000*g1^20 ...
        + 495899038910131200000*g1^19 - 226279500604416000000*g1^18 + 87853249224460800000*g1^17 ...
        - 29140743971658240000*g1^16 + 8280721241199360000*g1^15 - 2019014710917120000*g1^14 ...
        + 422574749262720000*g1^13 - 75867370844544000*g1^12 + 11661682075776000*g1^11 ...
        - 1529663230656000*g1^10 + 170385022224000*g1^9 - 16005613159200*g1^8 + 1256024175600*g1^7 ...
        - 81275412000*g1^6 + 4259075000*g1^5 - 176147900*g1^4 + 5532230*g1^3 - 123960*g1^2 ...
        + 1765*g1 - 12)*(4353564672000000000000*g1^35 - 49920874905600000000000*g1^34 ...
        + 273331301990400000000000*g1^33 - 952168129413120000000000*g1^32 ...
        + 2372144922685440000000000*g1^31 - 4503733790662656000000000*g1^30 + 6780402198180864000000000*g1^29 ...
        - 8315626593073766400000000*g1^28 + 8469814350900326400000000*g1^27 ...
        - 7268070987848908800000000*g1^26 + 5312210905712240640000000*g1^25 - 3335183532961376256000000*g1^24 ...
        + 1810640159680882176000000*g1^23 - 854428565740750848000000*g1^22 + 351902237162901120000000*g1^21 ...
        - 126892873491790003200000*g1^20 + 40155214799048947200000*g1^19 - 11169925622058931200000*g1^18 ...
        + 2733965177140742400000*g1^17 - 589016035101761280000*g1^16 + 111669206299848000000*g1^15 ...
        - 18612362891537280000*g1^14 + 2722713624186480000*g1^13 - 348692977955376000*g1^12 + 38959101808488000*g1^11 ...
        - 3779807541696000*g1^10 + 316488087396000*g1^9 - 22687394978400*g1^8 + 1377771717000*g1^7 ...
        - 69897540800*g1^6 + 2906679150*g1^5 - 96474330*g1^4 + 2456935*g1^3 - 45070*g1^2 + 530*g1 ...
        - 3)/(5*(7200*g1^6 - 14400*g1^5 + 11400*g1^4 - 4320*g1^3 + 840*g1^2 - 80*g1 + 3)*(5184000*g1^12 ...
        - 23328000*g1^11 + 45360000*g1^10 - 50414400*g1^9 + 35674560*g1^8 - 16935840*g1^7 + 5533920*g1^6 ...
        - 1256400*g1^5 + 197256*g1^4 - 20952*g1^3 + 1434*g1^2 - 57*g1 + 1)*(671846400000000*g1^24 ...
        - 5374771200000000*g1^23 + 19976232960000000*g1^22 - 45965491200000000*g1^21 + 73600213248000000*g1^20 ...
        - 87376983552000000*g1^19 + 80009012044800000*g1^18 - 58029955200000000*g1^17 + 33966358456320000*g1^16 ...
        - 16259672401920000*g1^15 + 6425442910080000*g1^14 - 2109213336960000*g1^13 + 577182824064000*g1^12 ...
        - 131829591744000*g1^11 + 25107067152000*g1^10 - 3974503248000*g1^9 + 520060694400*g1^8 - 55777286400*g1^7 ...
        + 4844511600*g1^6 - 334939200*g1^5 + 17979500*g1^4 - 721600*g1^3 + 20360*g1^2 - 360*g1 + 3)^4);
    d3 = (1 + 30*g1*(-1 + 12*g1*(1 + g1*(-6 + g1*(19 + 10*g1*(-3 + 2*g1))))))^2*(d1 ...
        - d4*(-4 + 5*g1*(45 + 2*g1*(-557 + 6*g1*(1329 + 4*g1*(-3046 + 5*g1*(3745 + 6*g1*(-2619 ...
        + 5*g1*(1497 + 2*g1*(-1426 + 3*g1*(575 + 2*g1*(-199 + 60*g1)))))))))))*(-1 + 5*g1*(13 ...
        + g1*(-377 + 6*g1*(1073 + 4*g1*(-3000 + g1*(23119 + 30*g1*(-4193 + 2*g1*(8119 + 3*g1*(-7425 ...
        + 2*g1*(7089 + 5*g1*(-1819 + 30*g1*(4*g1^2 - 22*g1 + 49))))))))))))/(1 + 20*g1*(-3 + g1*(80 ...
        + 3*g1*(-417 + 2*g1*(2127 + 20*g1*(-745 + 6*g1*(612 + g1*(-2138 + g1*(5257 + 60*g1*(-148 ...
        + g1*(163 + 15*g1*(-7 + 2*g1))))))))))))^2 - d5*(-18 + 5*g1*(419 + 2*g1*(-11479 + g1*(393593 ...
        + 4*g1*(-2367509 + 15*g1*(2832517 + 2*g1*(-19672821 + 4*g1*(54166682 + 3*g1*(-160231214 ...
        + 15*g1*(77216387 + 2*g1*(-228924365 + 2*g1*(558955443 + 2*g1*(-1125684524 + 5*g1*(747350881 ...
        + 6*g1*(-339718455 + 2*g1*(378512331 + 4*g1*(-170824342 + 15*g1*(16450267 + 3*g1*(-6227484 ...
        + 5*g1*(1084141 + 12*g1*(-58001 + 60*g1*(430 + g1*(-118 + 15*g1)))))))))))))))))))))))*(-3 ...
        + g1*(381 + 5*g1*(-4563 + 2*g1*(85675 + g1*(-2263703 + 2*g1*(22380953 + 30*g1*(-11464935 ...
        + 4*g1*(35095493 + 2*g1*(-174132928 + 15*g1*(94470742 + 3*g1*(-211853287 + 4*g1*(296101834 ...
        + g1*(-1379571665 + 2*g1*(2680311932 + 5*g1*(-1735158317 + 12*g1*(388658565 + g1*(-862945499 ...
        + 4*g1*(392651873 + 15*g1*(-38640173 + 3*g1*(15196641 + 5*g1*(-2809291 + 6*g1*(329561 ...
        + 20*g1*(-8469 + 2*g1*(1486 + 15*g1*(-21 + 2*g1)))))))))))))))))))))))))/(3 + 20*g1*(-18 ...
        + g1*(1018 + 5*g1*(-7216 + g1*(179795 + 12*g1*(-279116 + g1*(4037093 + 8*g1*(-5810134 ...
        + 9*g1*(6019221 + 5*g1*(-9200239 + g1*(58118211 + 4*g1*(-76290273 + 2*g1*(167008919 ...
        + 5*g1*(-122060957 + 3*g1*(123947587 + 8*g1*(-39206386 + g1*(81901906 + 15*g1*(-9328375 ...
        + 9*g1*(1429059 + 10*g1*(-156066 + g1*(131459 + 20*g1*(-4105 + 4*g1*(446 + 15*(-8 + g1)*g1)))))))))))))))))))))))^2)/(2*(-1 ...
        + 5*g1*(5 + 24*g1*(-2 + 3*g1)*(1 + g1*(-3 + 5*g1))))*(-1 + g1*(33 + 40*g1*(-11 + 3*g1*(25 + g1*(-93 + 5*g1*(37 + 12*(-3 + g1)*g1)))))));
    d2 = (d1*(-3 - 40*g1*(-2 + 3*g1*(7 + g1*(-36 + 5*g1*(19 + 12*(-2 + g1)*g1))))) ...
        + d4*(-1 + 5*g1*(13 + g1*(-377 + 6*g1*(1073 + 4*g1*(-3000 + g1*(23119 + 30*g1*(-4193 ...
        + 2*g1*(8119 + 3*g1*(-7425 + 2*g1*(7089 + 5*g1*(-1819 + 30*g1*(4*g1^2 - 22*g1 + 49))))))))))))*(-2 ...
        + 5*g1*(35 + 8*g1*(-177 + g1*(4387 + 3*g1*(-24818 + 15*g1*(20369 + 4*g1*(-47021 + 2*g1*(166115 ...
        + 3*g1*(-302768 + 5*g1*(257491 + 8*g1*(-106380 + g1*(271695 + g1*(-529894 + 45*g1*(17191 ...
        + 20*g1*(-909 + 2*g1*(329 + 2*g1*(-73 + 15*g1)))))))))))))))))/(1 + 20*g1*(-3 + g1*(80 ...
        + 3*g1*(-417 + 2*g1*(2127 + 20*g1*(-745 + 6*g1*(612 + g1*(-2138 + g1*(5257 + 60*g1*(-148 ...
        + g1*(163 + 15*g1*(-7 + 2*g1))))))))))))^2 + d5*(-3 + g1*(381 + 5*g1*(-4563 + 2*g1*(85675 ...
        + g1*(-2263703 + 2*g1*(22380953 + 30*g1*(-11464935 + 4*g1*(35095493 + 2*g1*(-174132928 ...
        + 15*g1*(94470742 + 3*g1*(-211853287 + 4*g1*(296101834 + g1*(-1379571665 + 2*g1*(2680311932 ...
        + 5*g1*(-1735158317 + 12*g1*(388658565 + g1*(-862945499 + 4*g1*(392651873 + 15*g1*(-38640173 ...
        + 3*g1*(15196641 + 5*g1*(-2809291 + 6*g1*(329561 + 20*g1*(-8469 + 2*g1*(1486 + 15*g1*(-21 ...
        + 2*g1)))))))))))))))))))))))))*(-12 + 5*g1*(353 + 2*g1*(-12396 + g1*(553223 + 10*g1*(-1761479 ...
        + 2*g1*(21295375 + 6*g1*(-67729510 + g1*(1046686813 + 2*g1*(-6669005483 + 60*g1*(1183229321 ...
        + 4*g1*(-2655665331 + 2*g1*(10122987913 + 3*g1*(-21952364249 + 5*g1*(24454557249 + 2*g1*(-58420564552 ...
        + 3*g1*(79868067527 + 2*g1*(-140532137209 + 5*g1*(84735001181 + 6*g1*(-36374662520 + g1*(79716280689 ...
        + 2*g1*(-73905646669 + 30*g1*(3835633171 + 2*g1*(-2482057534 + 45*g1*(58535307 + 10*g1*(-4999793 ...
        + 8*g1*(418459 + 5*g1*(-42236 + 3*g1*(5027 + 10*g1*(-113 + 12*g1)))))))))))))))))))))))))))))/(3 ...
        + 20*g1*(-18 + g1*(1018 + 5*g1*(-7216 + g1*(179795 + 12*g1*(-279116 + g1*(4037093 + 8*g1*(-5810134 ...
        + 9*g1*(6019221 + 5*g1*(-9200239 + g1*(58118211 + 4*g1*(-76290273 + 2*g1*(167008919 + 5*g1*(-122060957 ...
        + 3*g1*(123947587 + 8*g1*(-39206386 + g1*(81901906 + 15*g1*(-9328375 + 9*g1*(1429059 + 10*g1*(-156066 ...
        + g1*(131459 + 20*g1*(-4105 + 4*g1*(446 + 15*(-8 + g1)*g1)))))))))))))))))))))))^2)/(2*(-1 + g1)*(-1 ...
        + 5*g1*(5 + 24*g1*(-2 + 3*g1)*(1 + g1*(-3 + 5*g1)))));

    % Store gamma coefficients
    params.g1 = g1;
    params.g2 = g2;
    params.g3 = g3;
    params.g4 = g4;
    params.g5 = 1;
    
    % Store alpha coefficients
    params.a11 = a11;
    params.a21 = a21;    
    params.a22 = a22;
    params.a31 = a31;
    params.a32 = a32;
    params.a33 = a33;
    params.a41 = a41;
    params.a42 = a42;
    params.a43 = a43;    
    params.a44 = a44;
    params.a51 = a51;
    params.a52 = a52;
    params.a53 = a53;    
    params.a54 = a54;
    params.a55 = a55;

    % b 계수 저장
    params.b1 = b1;
    params.b2 = b2;
    params.b3 = b3;
    params.b4 = b4;
    params.b5 = b5;

    % d 계수 저장
    params.d1 = d1;
    params.d2 = d2;
    params.d3 = d3;
    params.d4 = d4;
    params.d5 = d5;
    
else
    error('Only 2 or 3,4,5 sub-steps are supported.');
end

end
